/**
 * Telegram Webhook API Route
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ TECHNICAL_SETUP.md
 */

import { NextRequest, NextResponse } from 'next/server';
import { bot } from '@/bot/telegram-bot-simple';

export async function POST(request: NextRequest) {
  try {
    const body = await request.text();
    console.log('üì® Webhook –ø–æ–ª—É—á–µ–Ω:', body);
    
    // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ–∫—Ä–µ—Ç–∞
    if (process.env.NODE_ENV === 'production') {
      const telegramSecret = request.headers.get('x-telegram-bot-api-secret-token');
      if (process.env.TELEGRAM_WEBHOOK_SECRET && telegramSecret !== process.env.TELEGRAM_WEBHOOK_SECRET) {
        return new NextResponse('Unauthorized', { status: 401 });
      }
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º webhook
    const update = JSON.parse(body);
    await bot.handleUpdate(update);
    
    console.log('‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    return new NextResponse('OK', { status: 200 });
  } catch (error) {
    console.error('‚ùå Webhook error:', error);
    return new NextResponse('Internal Server Error', { status: 500 });
  }
}

export async function GET(request: NextRequest) {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
  return new NextResponse('Telegram Webhook is working', { status: 200 });
}
