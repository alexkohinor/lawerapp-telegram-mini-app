'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { HapticFeedback } from '@/components/telegram/HapticFeedback';
import { BackButton } from '@/components/telegram/BackButton';
import { useTelegramUser } from '@/hooks/useTelegramUser';

interface Document {
  id: string;
  name: string;
  type: string;
  icon: string;
  category: string;
  status: 'draft' | 'generated' | 'signed' | 'archived';
  createdAt: string;
  updatedAt: string;
  content: string;
  size: string;
  fields: Record<string, any>;
}

const MOCK_DOCUMENT: Document = {
  id: '1',
  name: '–¢—Ä—É–¥–æ–≤–æ–π –¥–æ–≥–æ–≤–æ—Ä - –ò–≤–∞–Ω–æ–≤ –ò.–ò.',
  type: '–¢—Ä—É–¥–æ–≤–æ–π –¥–æ–≥–æ–≤–æ—Ä',
  icon: 'üë∑',
  category: '–¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ',
  status: 'generated',
  createdAt: '2024-01-15T10:30:00Z',
  updatedAt: '2024-01-15T10:45:00Z',
  size: '2.3 KB',
  fields: {
    employer_name: '–û–û–û "–†–æ–≥–∞ –∏ –∫–æ–ø—ã—Ç–∞"',
    employee_name: '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
    position: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
    salary: 50000,
    start_date: '2024-02-01',
    work_schedule: '–ü–æ–ª–Ω—ã–π –¥–µ–Ω—å',
  },
  content: `–¢–†–£–î–û–í–û–ô –î–û–ì–û–í–û–†

–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å: –û–û–û "–†–æ–≥–∞ –∏ –∫–æ–ø—ã—Ç–∞"
–†–∞–±–æ—Ç–Ω–∏–∫: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á

1. –ü–†–ï–î–ú–ï–¢ –î–û–ì–û–í–û–†–ê
–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å –æ–±—è–∑—É–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –†–∞–±–æ—Ç–Ω–∏–∫—É —Ä–∞–±–æ—Ç—É –ø–æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º", –∞ –†–∞–±–æ—Ç–Ω–∏–∫ –æ–±—è–∑—É–µ—Ç—Å—è –ª–∏—á–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ç—Ä—É–¥–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏—è–º–∏ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞.

2. –¢–†–£–î–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø
–†–∞–±–æ—Ç–Ω–∏–∫ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É –ø–æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º" —Å –æ–∫–ª–∞–¥–æ–º 50 000 (–ø—è—Ç—å–¥–µ—Å—è—Ç —Ç—ã—Å—è—á) —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü.

3. –†–ï–ñ–ò–ú –†–ê–ë–û–¢–´
–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –ü–æ–ª–Ω—ã–π –¥–µ–Ω—å (40 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é).

4. –°–†–û–ö –î–ï–ô–°–¢–í–ò–Ø –î–û–ì–û–í–û–†–ê
–ù–∞—Å—Ç–æ—è—â–∏–π –¥–æ–≥–æ–≤–æ—Ä –∑–∞–∫–ª—é—á–µ–Ω –Ω–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Å—Ä–æ–∫ —Å 01.02.2024.

5. –ü–†–ê–í–ê –ò –û–ë–Ø–ó–ê–ù–ù–û–°–¢–ò –°–¢–û–†–û–ù
–†–∞–±–æ—Ç–Ω–∏–∫ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –Ω–∞:
- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã, –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω–æ–π —Ç—Ä—É–¥–æ–≤—ã–º –¥–æ–≥–æ–≤–æ—Ä–æ–º;
- –†–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —É—Å–ª–æ–≤–∏—è–º, –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º–∏;
- –°–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω—É—é –∏ –≤ –ø–æ–ª–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ –≤—ã–ø–ª–∞—Ç—É –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã.

–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å –æ–±—è–∑—É–µ—Ç—Å—è:
- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –†–∞–±–æ—Ç–Ω–∏–∫—É —Ä–∞–±–æ—Ç—É, –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω—É—é —Ç—Ä—É–¥–æ–≤—ã–º –¥–æ–≥–æ–≤–æ—Ä–æ–º;
- –û–±–µ—Å–ø–µ—á–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —É—Å–ª–æ–≤–∏—è —Ç—Ä—É–¥–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º;
- –°–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏ –≤ –ø–æ–ª–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ –≤—ã–ø–ª–∞—á–∏–≤–∞—Ç—å –†–∞–±–æ—Ç–Ω–∏–∫—É –∑–∞—Ä–∞–±–æ—Ç–Ω—É—é –ø–ª–∞—Ç—É.

6. –ó–ê–†–ê–ë–û–¢–ù–ê–Ø –ü–õ–ê–¢–ê
–†–∞–∑–º–µ—Ä –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 50 000 (–ø—è—Ç—å–¥–µ—Å—è—Ç —Ç—ã—Å—è—á) —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü.

7. –ó–ê–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–´–ï –ü–û–õ–û–ñ–ï–ù–ò–Ø
–ù–∞—Å—Ç–æ—è—â–∏–π –¥–æ–≥–æ–≤–æ—Ä –≤—Å—Ç—É–ø–∞–µ—Ç –≤ —Å–∏–ª—É —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –µ–≥–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏.

–î–∞—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è: 15.01.2024

–ü–æ–¥–ø–∏—Å–∏ —Å—Ç–æ—Ä–æ–Ω:
–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å: _________________ (–û–û–û "–†–æ–≥–∞ –∏ –∫–æ–ø—ã—Ç–∞")
–†–∞–±–æ—Ç–Ω–∏–∫: _________________ (–ò–≤–∞–Ω–æ–≤ –ò.–ò.)`,
};

export default function DocumentDetailPage({ params }: { params: { id: string } }) {
  const router = useRouter();
  const { hapticFeedback, showAlert } = useTelegramUser();
  const [document] = useState<Document>(MOCK_DOCUMENT);
  const [isDownloading, setIsDownloading] = useState(false);

  const getStatusBadge = (status: Document['status']) => {
    switch (status) {
      case 'generated':
        return <Badge variant="success">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω</Badge>;
      case 'signed':
        return <Badge variant="info">–ü–æ–¥–ø–∏—Å–∞–Ω</Badge>;
      case 'draft':
        return <Badge variant="warning">–ß–µ—Ä–Ω–æ–≤–∏–∫</Badge>;
      case 'archived':
        return <Badge variant="secondary">–ê—Ä—Ö–∏–≤</Badge>;
      default:
        return <Badge variant="secondary">–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ</Badge>;
    }
  };

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'long',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  const handleDownload = async () => {
    setIsDownloading(true);
    hapticFeedback('medium');

    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      const blob = new Blob([document.content], { type: 'text/plain;charset=utf-8' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `${document.name}.txt`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
      
      showAlert('–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!');
    } catch (error) {
      showAlert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞');
    } finally {
      setIsDownloading(false);
    }
  };

  const handleEdit = () => {
    hapticFeedback('light');
    router.push(`/documents/generate?edit=${document.id}`);
  };

  const handleBackToDocuments = () => {
    hapticFeedback('light');
    router.push('/documents');
  };

  const handleShare = () => {
    hapticFeedback('light');
    if (navigator.share) {
      navigator.share({
        title: document.name,
        text: `–î–æ–∫—É–º–µ–Ω—Ç: ${document.name}`,
        url: window.location.href,
      });
    } else {
      // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤ –±–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Web Share API
      navigator.clipboard.writeText(window.location.href);
      showAlert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-100">
      <BackButton onClick={handleBackToDocuments} />
      
      <div className="max-w-4xl mx-auto px-4 py-8">
        {/* Header */}
        <div className="flex items-center justify-between mb-8">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-2">
              üìÑ {document.name}
            </h1>
            <p className="text-gray-600">
              {formatDate(document.createdAt)}
            </p>
          </div>
          {getStatusBadge(document.status)}
        </div>

        {/* Document Info */}
        <Card className="mb-6">
          <CardContent className="p-4">
            <div className="flex items-center space-x-3">
              <span className="text-2xl">{document.icon}</span>
              <div>
                <h3 className="font-semibold text-gray-900">
                  {document.type}
                </h3>
                <p className="text-sm text-gray-600">
                  {document.category} ‚Ä¢ –†–∞–∑–º–µ—Ä: {document.size}
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Document Fields */}
        <Card className="mb-6">
          <CardHeader>
            <CardTitle>–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—è</CardTitle>
            <CardDescription>
              –î–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {Object.entries(document.fields).map(([key, value]) => (
                <div key={key} className="bg-gray-50 p-3 rounded-lg">
                  <div className="text-sm font-medium text-gray-700 mb-1">
                    {key.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}
                  </div>
                  <div className="text-gray-900">
                    {typeof value === 'boolean' ? (value ? '–î–∞' : '–ù–µ—Ç') : String(value)}
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* Document Content */}
        <Card className="mb-6">
          <CardHeader>
            <CardTitle>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞</CardTitle>
            <CardDescription>
              –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="bg-white border rounded-lg p-4 max-h-96 overflow-y-auto">
              <pre className="whitespace-pre-wrap text-sm text-gray-800 font-mono leading-relaxed">
                {document.content}
              </pre>
            </div>
          </CardContent>
        </Card>

        {/* Actions */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
          <HapticFeedback type="medium">
            <Button
              variant="default"
              onClick={handleDownload}
              loading={isDownloading}
              disabled={isDownloading}
              className="bg-gradient-to-r from-green-600 to-emerald-600 text-white hover:from-green-700 hover:to-emerald-700 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
            >
              {isDownloading ? '–°–∫–∞—á–∏–≤–∞–µ–º...' : 'üì• –°–∫–∞—á–∞—Ç—å'}
            </Button>
          </HapticFeedback>
          
          <HapticFeedback type="light">
            <Button
              variant="outline"
              onClick={handleEdit}
              className="border-green-300 text-green-700 hover:bg-green-50"
            >
              ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            </Button>
          </HapticFeedback>
          
          <HapticFeedback type="light">
            <Button
              variant="outline"
              onClick={handleShare}
              className="border-blue-300 text-blue-700 hover:bg-blue-50"
            >
              üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
            </Button>
          </HapticFeedback>
        </div>

        {/* Document History */}
        <Card className="mb-6">
          <CardHeader>
            <CardTitle>–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π</CardTitle>
            <CardDescription>
              –•—Ä–æ–Ω–æ–ª–æ–≥–∏—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="flex items-center space-x-3 p-3 bg-green-50 rounded-lg">
                <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                <div className="flex-1">
                  <p className="text-sm font-medium text-green-900">
                    –î–æ–∫—É–º–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
                  </p>
                  <p className="text-xs text-green-700">
                    {formatDate(document.createdAt)}
                  </p>
                </div>
              </div>
              
              <div className="flex items-center space-x-3 p-3 bg-blue-50 rounded-lg">
                <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                <div className="flex-1">
                  <p className="text-sm font-medium text-blue-900">
                    –î–æ–∫—É–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω
                  </p>
                  <p className="text-xs text-blue-700">
                    {formatDate(document.updatedAt)}
                  </p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Legal Notice */}
        <Card>
          <CardContent className="p-4">
            <div className="flex items-start space-x-3">
              <span className="text-yellow-500 text-xl">‚ö†Ô∏è</span>
              <div className="text-sm text-gray-600">
                <p className="font-semibold mb-1">–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</p>
                <p>
                  –î–∞–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏ –Ω–æ—Å–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. 
                  –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∞–≤–æ–≤—ã—Ö —Ü–µ–ª—è—Ö —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —é—Ä–∏—Å—Ç–æ–º 
                  –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–µ–π—Å—Ç–≤—É—é—â–µ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}