/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram Webhook
 */

import { Bot } from 'grammy';

async function setupWebhook() {
  const bot = new Bot(process.env.TELEGRAM_BOT_TOKEN || '');
  
  try {
    const webhookUrl = `${process.env.NEXT_PUBLIC_APP_URL}/api/telegram/webhook`;
    
    console.log('üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook...');
    console.log(`URL: ${webhookUrl}`);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    await bot.api.setWebhook(webhookUrl, {
      secret_token: process.env.TELEGRAM_WEBHOOK_SECRET,
      allowed_updates: ['message', 'callback_query'],
      drop_pending_updates: true
    });
    
    console.log('‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
    const webhookInfo = await bot.api.getWebhookInfo();
    console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:');
    console.log(`URL: ${webhookInfo.url}`);
    console.log(`Pending updates: ${webhookInfo.pending_update_count}`);
    console.log(`Last error: ${webhookInfo.last_error_message || '–ù–µ—Ç –æ—à–∏–±–æ–∫'}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
setupWebhook();
