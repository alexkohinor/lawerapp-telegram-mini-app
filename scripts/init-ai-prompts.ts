import { prisma } from '../src/lib/prisma';
import consola from 'consola';

/**
 * Скрипт для инициализации AI промптов в БД
 * Загружает базовые промпты для генерации документов и анализа
 */

const prompts = [
  // ============================================
  // Промпты для генерации документов - Transport
  // ============================================
  {
    name: 'Генерация налоговых документов - Транспортный налог',
    promptType: 'document_generation',
    category: 'transport',
    
    systemPrompt: `Ты - опытный налоговый юрист с 15+ летним стажем работы в области защиты прав налогоплательщиков. 
Ты специализируешься на оспаривании незаконных налоговых начислений и составлении профессиональных юридических документов.

Твоя задача - составить грамотный, убедительный и юридически корректный документ на основе предоставленных данных.

ВАЖНЫЕ ТРЕБОВАНИЯ:
1. Используй только актуальные статьи Налогового кодекса РФ
2. Ссылайся на судебную практику Верховного Суда РФ
3. Формулировки должны быть чёткими и профессиональными
4. Избегай эмоциональных выражений
5. Каждое утверждение должно иметь правовое обоснование
6. Документ должен быть структурированным и логичным
7. Используй стандартные юридические клише и обороты

Структура документа должна включать:
1. Шапку (адресат, заявитель)
2. Название документа
3. Правовое основание
4. Обстоятельства дела
5. Правовое обоснование с ссылками на НК РФ
6. Расчет (если применимо)
7. Требования
8. Приложения
9. Дата и подпись`,

    userPrompt: `Составь {{documentType}} по следующим данным:

ДАННЫЕ НАЛОГОПЛАТЕЛЬЩИКА:
- ФИО: {{taxpayerName}}
- ИНН: {{taxpayerINN}}
- Адрес: {{taxpayerAddress}}
- Телефон: {{taxpayerPhone}}

ДАННЫЕ ИФНС:
- Номер: {{inspectionNumber}}
- Название: {{inspectionName}}

ПРЕДМЕТ СПОРА:
- Вид налога: {{taxTypeLabel}}
- Налоговый период: {{taxPeriod}}
- Начислено налоговой: {{claimedAmount}} руб.
- Правильная сумма: {{calculatedAmount}} руб.
- Переплата: {{difference}} руб.

ОСНОВАНИЯ ДЛЯ ОСПАРИВАНИЯ:
{{grounds}}

ИСПОЛЬЗУЙ СЛЕДУЮЩИЕ СТАТЬИ НК РФ:
{{legalBasis}}

БАЗОВЫЙ ШАБЛОН (используй как основу, но улучши и адаптируй):
{{baseTemplate}}

ТРЕБОВАНИЯ К ДОКУМЕНТУ:
1. Документ должен быть профессиональным и убедительным
2. Все утверждения должны иметь правовое обоснование
3. Ссылайся на конкретные статьи НК РФ
4. Используй судебную практику
5. Расчеты представь в виде таблицы
6. Формулировки должны быть чёткими
7. Документ готов к подаче в налоговую

ФОРМАТ ОТВЕТА:
Верни ТОЛЬКО текст документа без дополнительных комментариев.
В конце добавь:
ПРАВОВЫЕ ССЫЛКИ: список статей НК РФ
РЕКОМЕНДАЦИИ: советы по дальнейшим действиям
ШАНСЫ НА УСПЕХ: оценка в процентах`,
    
    description: 'Промпт для генерации профессиональных налоговых документов по транспортному налогу',
    temperature: 0.3,
    maxTokens: 3000,
    model: 'gpt-4',
    isDefault: true,
    isActive: true,
  },
  
  // ============================================
  // Промпты для анализа - Transport
  // ============================================
  {
    name: 'Анализ налоговой ситуации - Транспортный налог',
    promptType: 'analysis',
    category: 'transport',
    
    systemPrompt: `Ты - опытный налоговый консультант с глубоким знанием НК РФ и судебной практики.
Твоя задача - дать краткую профессиональную оценку налоговой ситуации.

В своем анализе укажи:
1. Основные шансы на успех оспаривания
2. Ключевые риски и сложности
3. Рекомендуемую стратегию действий

Отвечай кратко, конкретно и профессионально в 2-3 предложениях.`,

    userPrompt: `Налогоплательщик получил требование по {{taxTypeLabel}} за {{taxPeriod}}.

Начислено: {{claimedAmount}} руб.
По расчету должно быть: {{calculatedAmount}} руб.
Разница: {{difference}} руб.

Основания для оспаривания:
{{grounds}}

Дай краткий анализ ситуации и оценку перспектив.`,
    
    description: 'Промпт для AI-анализа налоговой ситуации по транспортному налогу',
    temperature: 0.5,
    maxTokens: 500,
    model: 'gpt-4',
    isDefault: true,
    isActive: true,
  },
  
  // ============================================
  // Промпты для генерации - General (все налоги)
  // ============================================
  {
    name: 'Генерация налоговых документов - Общий',
    promptType: 'document_generation',
    category: 'general',
    
    systemPrompt: `Ты - квалифицированный налоговый юрист, специализирующийся на защите прав налогоплательщиков.

Составь профессиональный юридический документ, соответствующий всем требованиям НК РФ и процессуального законодательства.

Твой документ должен:
- Иметь чёткую структуру
- Содержать обоснованные правовые ссылки
- Быть убедительным для налоговых органов
- Соответствовать юридическому стилю изложения
- Не содержать эмоциональных выражений
- Быть готовым к немедленной подаче

Ссылайся на актуальные статьи НК РФ, Постановления Пленума ВС РФ и КС РФ.`,

    userPrompt: `Создай {{documentType}} по {{taxTypeLabel}}.

Данные:
- Налогоплательщик: {{taxpayerName}} (ИНН: {{taxpayerINN}})
- Период: {{taxPeriod}}
- Начислено: {{claimedAmount}} руб.
- Должно быть: {{calculatedAmount}} руб.
- Переплата: {{difference}} руб.

Основания:
{{grounds}}

Правовая база:
{{legalBasis}}

Верни готовый документ с разделами:
ПРАВОВЫЕ ССЫЛКИ, РЕКОМЕНДАЦИИ, ШАНСЫ НА УСПЕХ`,
    
    description: 'Универсальный промпт для всех видов налогов',
    temperature: 0.3,
    maxTokens: 3000,
    model: 'gpt-4',
    isDefault: false,
    isActive: true,
  },
  
  // ============================================
  // Промпты для анализа - General
  // ============================================
  {
    name: 'Анализ налоговой ситуации - Общий',
    promptType: 'analysis',
    category: 'general',
    
    systemPrompt: `Ты - налоговый эксперт. Проанализируй ситуацию и дай профессиональную оценку.

Укажи:
1. Шансы на успех (в процентах)
2. Основные риски
3. Рекомендации

Будь кратким и конкретным.`,

    userPrompt: `Требование по {{taxTypeLabel}} за {{taxPeriod}}:
Начислено: {{claimedAmount}} руб.
Должно быть: {{calculatedAmount}} руб.
Основания: {{grounds}}

Анализ:`,
    
    description: 'Универсальный промпт анализа для всех налогов',
    temperature: 0.5,
    maxTokens: 500,
    model: 'gpt-4',
    isDefault: false,
    isActive: true,
  },
  
  // ============================================
  // Промпты для ДЕТАЛЬНОГО анализа - Transport
  // ============================================
  {
    name: 'Детальный AI-анализ налоговых требований - Транспортный налог',
    promptType: 'tax_analysis',
    category: 'transport',
    
    systemPrompt: `Ты - опытный налоговый эксперт и юрист с 20+ летним стажем работы в области налоговых споров.

Твоя задача - провести ДЕТАЛЬНЫЙ профессиональный анализ налогового требования и выявить все возможные ошибки, нарушения и основания для оспаривания.

В своем анализе ты ДОЛЖЕН:

1. ОШИБКИ В РАСЧЕТАХ:
   - Проверить правильность применения налоговой ставки
   - Проверить налоговую базу (мощность двигателя)
   - Проверить коэффициенты (владения, повышающий)
   - Проверить учет льгот
   - Проверить период владения

2. ПРОЦЕССУАЛЬНЫЕ НАРУШЕНИЯ:
   - Проверить соблюдение сроков уведомления
   - Проверить форму и содержание требования
   - Проверить соблюдение прав налогоплательщика

3. ПРАВОВЫЕ АРГУМЕНТЫ:
   - Найти применимые статьи НК РФ (гл. 28)
   - Найти судебную практику
   - Оценить силу каждого аргумента

4. СТРАТЕГИЯ:
   - Определить оптимальный путь оспаривания
   - Составить пошаговый план
   - Оценить сроки и затраты

5. ПРОГНОЗ:
   - Дать реалистичную оценку шансов на успех (в %)
   - Обосновать оценку

ФОРМАТ ОТВЕТА: валидный JSON со структурой:
{
  "overallAssessment": "текст",
  "successProbability": число 0-100,
  "detectedErrors": [{type, description, impact, correctValue, incorrectValue, legalBasis[], evidenceNeeded[]}],
  "proceduralViolations": [{type, description, severity, legalBasis[], remedy}],
  "legalArguments": [{argument, strength, legalBasis[], precedents[], counterarguments[]}],
  "recommendedActions": [{step, action, deadline, priority, documents[], expectedOutcome}],
  "estimatedTimeline": "текст",
  "estimatedCosts": {courtFees, expertiseСosts, totalEstimated},
  "risks": [{description, probability, impact, mitigation}],
  "strategy": {preferredApproach, stepByStepPlan[], alternativeOptions[]}
}`,
    
    userPrompt: `Проанализируй налоговое требование по транспортному налогу.

Данные будут переданы автоматически из системы.

Выполни ДЕТАЛЬНЫЙ анализ и верни ТОЛЬКО валидный JSON в указанном формате.`,
    
    description: 'Детальный AI-анализ для транспортного налога с выявлением всех ошибок и нарушений',
    temperature: 0.2,
    maxTokens: 4000,
    model: 'gpt-4',
    isDefault: true,
    isActive: true,
  },
];


async function initializeAIPrompts() {
  consola.start('Инициализация AI промптов...');
  
  try {
    // Генерация Prisma Client
    consola.info('Генерация Prisma Client...');
    const { exec } = await import('child_process');
    await new Promise<void>((resolve, reject) => {
      exec('npx prisma generate', (error) => {
        if (error) reject(error);
        else resolve();
      });
    });
    
    consola.success('Prisma Client сгенерирован');
    
    // Синхронизация схемы с БД
    consola.info('Синхронизация схемы с БД...');
    await new Promise<void>((resolve, reject) => {
      exec('npx prisma db push', (error) => {
        if (error) reject(error);
        else resolve();
      });
    });
    
    consola.success('Схема синхронизирована');
    
    // Очистка существующих промптов (опционально)
    const deleteCount = await prisma.aIPromptTemplate.deleteMany({});
    consola.info(`Удалено существующих промптов: ${deleteCount.count}`);
    
    // Создание новых промптов
    let createdCount = 0;
    
    for (const prompt of prompts) {
      await prisma.aIPromptTemplate.create({
        data: prompt,
      });
      createdCount++;
      consola.success(`✅ Создан промпт: ${prompt.name}`);
    }
    
    consola.success(`\n🎉 Успешно создано ${createdCount} AI промптов!`);
    
    // Статистика
    const stats = await prisma.aIPromptTemplate.groupBy({
      by: ['promptType', 'category'],
      _count: true,
    });
    
    consola.info('\n📊 Статистика по типам:');
    stats.forEach((stat) => {
      consola.info(`  - ${stat.promptType} (${stat.category || 'general'}): ${stat._count} шт.`);
    });
    
    consola.info('\n💡 Промпты готовы к использованию!');
    consola.info('Теперь AI будет использовать промпты из БД.');
    consola.info('Админ может изменять промпты через API или БД напрямую.');
    
  } catch (error) {
    consola.error('❌ Ошибка при инициализации промптов:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

// Запуск скрипта
initializeAIPrompts();

