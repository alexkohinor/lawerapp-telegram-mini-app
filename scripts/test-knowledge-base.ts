/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –ø—Ä–∞–≤–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
 */

import { LegalKnowledgeService } from '../src/lib/knowledge-base/legal-knowledge-service';
import { defaultRAGConfig } from '../src/lib/rag/config';

async function testKnowledgeBase() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –ø—Ä–∞–≤–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...');
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
    const knowledgeService = new LegalKnowledgeService(defaultRAGConfig);

    console.log('üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...');
    const stats = await knowledgeService.getKnowledgeBaseStats();
    console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`   - –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${stats.totalDocuments}`);
    console.log(`   - –í—Å–µ–≥–æ —à–∞–±–ª–æ–Ω–æ–≤: ${stats.totalTemplates}`);
    console.log(`   - –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ —Ç–∏–ø–∞–º:`, stats.documentsByType);
    console.log(`   - –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:`, stats.documentsByCategory);

    // –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    const testQueries = [
      {
        query: '–∑–∞—â–∏—Ç–∞ –ø—Ä–∞–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π',
        filters: { type: 'law' },
        description: '–ü–æ–∏—Å–∫ –∑–∞–∫–æ–Ω–æ–≤ –æ –∑–∞—â–∏—Ç–µ –ø—Ä–∞–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π'
      },
      {
        query: '—Ç—Ä—É–¥–æ–≤–æ–π –¥–æ–≥–æ–≤–æ—Ä',
        filters: { type: 'template' },
        description: '–ü–æ–∏—Å–∫ —à–∞–±–ª–æ–Ω–æ–≤ —Ç—Ä—É–¥–æ–≤—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤'
      },
      {
        query: '–∞–ª–∏–º–µ–Ω—Ç—ã',
        filters: { category: '—Å–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ' },
        description: '–ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ —Å–µ–º–µ–π–Ω–æ–º—É –ø—Ä–∞–≤—É –æ–± –∞–ª–∏–º–µ–Ω—Ç–∞—Ö'
      },
      {
        query: '–≤–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞',
        filters: { tags: ['–ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏', '–≤–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞'] },
        description: '–ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ –≤–æ–∑–≤—Ä–∞—Ç–µ —Ç–æ–≤–∞—Ä–∞'
      }
    ];

    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞...');
    
    for (const testQuery of testQueries) {
      console.log(`\nüìù ${testQuery.description}`);
      console.log(`   –ó–∞–ø—Ä–æ—Å: "${testQuery.query}"`);
      console.log(`   –§–∏–ª—å—Ç—Ä—ã:`, testQuery.filters);
      
      try {
        const results = await knowledgeService.searchLegalDocuments(
          testQuery.query,
          testQuery.filters
        );
        
        console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${results.length}`);
        
        if (results.length > 0) {
          console.log('   üìã –¢–æ–ø-3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:');
          results.slice(0, 3).forEach((result, index) => {
            console.log(`      ${index + 1}. ${result.title} (—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: ${result.relevance.toFixed(3)})`);
            console.log(`         –¢–∏–ø: ${result.type}`);
            console.log(`         –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: ${result.content.substring(0, 100)}...`);
          });
        }
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: ${error}`);
      }
    }

    console.log('\nüìÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤...');
    
    try {
      const templates = await knowledgeService.getDocumentTemplates();
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤: ${templates.length}`);
      
      if (templates.length > 0) {
        console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:');
        templates.forEach((template, index) => {
          console.log(`   ${index + 1}. ${template.name} (${template.type})`);
          console.log(`      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${template.category}`);
          console.log(`      –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${template.variables.length}`);
        });
      }
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤: ${error}`);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  testKnowledgeBase();
}

export default testKnowledgeBase;
